version: '3.3'
services:

  mongo:
    image: mongo
    restart: on-failure
    container_name: mongo
    environment:
        MONGO_INITDB_ROOT_USERNAME: root
        MONGO_INITDB_ROOT_PASSWORD: example
        MONGO_INITDB_DATABASE: gog-db
    ports:
      - "27017:27017"
    volumes:
      - type: volume
        source: mongodb_data_volume
        target: /data/db
    networks:
      - mongo-compose-network

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    restart: on-failure
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_AUTH_USERNAME : 'admin'
      ME_CONFIG_MONGODB_AUTH_PASSWORD : 'pass'
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongo://root:example@mongo:27017/
    networks:
      - mongo-compose-network
    depends_on:
      - mongo

  web:
    build:
      context: ./GOG/
      dockerfile: Dockerfile
    container_name: django
    command: python manage.py runserver 0.0.0.0:8000
    env_file:
      - ./GOG/.env
    volumes:
      - ./GOG:/app
    ports:
      - "8000:8000"
    networks:
      - mongo-compose-network
    depends_on:
      - mongo
      - mongo-express

volumes:
  mongodb_data_volume:
    driver: local

networks:
  mongo-compose-network:
    driver: bridge

