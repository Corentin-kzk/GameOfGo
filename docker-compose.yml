version: '3.3'
services:

  db:
    image: postgres
    restart: on-failure
    container_name: postgres-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=gog-db
    ports:
      - "5432:5432"
    volumes:
      - type: volume
        source: postgres_data_volume
        target: /data/db/postgres
    networks:
      - postgres-compose-network

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
    environment:
      - ADMINER_DEFAULT_DB_DRIVER=pgsql
      - ADMINER_DEFAULT_DB_HOST=db
      - ADMINER_DEFAULT_DB_NAME=gog-db
    networks:
      - postgres-compose-network
    depends_on:
      - db

  backend:
    build:
      context: ./GOG/
      dockerfile: Dockerfile
    container_name: django-backend
    command: python manage.py runserver 0.0.0.0:8000
    env_file:
      - ./GOG/.env
    environment:
      - DB_HOST=db
      - DJANGO_SUPERUSER_PASSWORD=test
      - DJANGO_SUPERUSER_EMAIL=example@example.com
      - DJANGO_SUPERUSER_USERNAME=admin
    volumes:
      - ./GOG:/app
    ports:
      - "8000:8000"
    networks:
      - postgres-compose-network
    depends_on:
      - db
#
#  frontend:
#    build:
#      context: ./front-end/
#      dockerfile: Dockerfile
#    container_name: frontend
#    ports:
#      - "3000:3000"

volumes:
  postgres_data_volume:
    driver: local

networks:
  postgres-compose-network:
    driver: bridge

